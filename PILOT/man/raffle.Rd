% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RaFFLE.R
\name{raffle}
\alias{raffle}
\title{Random Forest Featuring Linear Extensions (RaFFLE)}
\usage{
raffle(
  X,
  y,
  nTrees = 50,
  alpha = 0.5,
  min_sample_leaf = 5,
  min_sample_alpha = 5,
  min_sample_fit = 10,
  maxDepth = 20,
  maxModelDepth = 100,
  n_features_node = 1,
  rel_tolerance = 0.01
)
}
\arguments{
\item{X}{an \eqn{n \times d} set of training data}

\item{y}{a vector of length \eqn{n} with the training response}

\item{nTrees}{the number of trees in the forest}

\item{alpha}{a value between 0 and 1 determining the "degrees of freedom" of the models con/lin/pcon/blin/plin/pconc used in the individual PILOT trees. See details below.}

\item{min_sample_leaf}{a positive integer. Do not consider splits which result in less than \code{min_sample_leaf} in a leaf node.}

\item{min_sample_alpha}{a positive integer. Do not consider splits which result in less than \code{min_sample_alpha} in a leaf node.}

\item{min_sample_fit}{a positive integer. Stop splitting the tree in a given node once no more than \code{min_sample_fit} observations are left in that node.}

\item{maxDepth}{an integer specifying the maximum depth of the tree. The depth of a tree is incremented when pcon/blin/plin/pconc models are fit.}

\item{maxModelDepth}{an integer specifying the maximum model depth of the tree. Model depth is incremented when any model is fit, including lin models.}

\item{n_features_node}{the number of features randomly sampled at each node for fitting the next model.}

\item{rel_tolerance}{a lin model is only fit when the relative RSS is decreased by \code{rel_tolerance}.}
}
\value{
an object of the \code{RAFFLE} class, i.e. a list with the following components:
\itemize{
  \item \code{modelcube}: A 3-dimensional array describing the fitted model in raw form. Used for plotting and printing the individual trees.
  \item \code{residuals}: the residuals of the RAFFLE model on the training data
  \item \code{parameters}: A list containing the parameters used for fitting the model
  \item \code{data_names}: A vector with the column names of the training data.  Used for out-of-sample prediction.
  \item \code{catInfo}: A list containing information on the categorical variables in the data. Used for out-of-sample prediction.
  \item \code{modelpointer}: A pointer to the C++ object from the C++ class RAFFLE 
  \item \code{jsonString}: A string describing the fitted  model
}
}
\description{
Runs RaFFLE to fit a forest of piecewise linear trees.
}
\details{
\code{alpha} can be considered as a regularization parameter. High values of \code{alpha} makes splitting nodes more costly.
}
\examples{
data <- iris
y <- as.vector(data[, 1])
X <- as.data.frame(data[, 2:4])
raffle.out <- raffle(X, y, maxDepth = 3)
# plot residuals
plot(raffle.out$residuals)
# generate predictions in-sample
preds.out <- predict(raffle.out, newdata = X)
plot(preds.out, y)
# plot the first tree in the ensemble
plot(raffle.out, treeNb = 1)
# print model matrix of the first tree
 print(raffle.out, treeNb = 1)

}
